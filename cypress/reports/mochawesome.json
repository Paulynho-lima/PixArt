{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 29,
    "pending": 0,
    "failures": 12,
    "start": "2021-06-09T04:21:27.450Z",
    "end": "2021-06-09T04:23:01.586Z",
    "duration": 94136,
    "testsRegistered": 41,
    "passPercent": 70.73170731707317,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "fb25cd0b-f33b-4002-b27a-d387d3c9785d",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "82cd1ebd-5709-401f-ab9e-a14d4db7f59f",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 515,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "2461b9cf-8f73-4a94-972b-c413139d7fc3",
              "parentUUID": "82cd1ebd-5709-401f-ab9e-a14d4db7f59f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2461b9cf-8f73-4a94-972b-c413139d7fc3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 515,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7a1b0e16-0365-4f8b-a0ea-2ba9b7675dc8",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 377,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "02e96b5f-fc60-4119-ad5d-c1820b54b753",
              "parentUUID": "7a1b0e16-0365-4f8b-a0ea-2ba9b7675dc8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 446,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "d68ee7b1-df48-40d9-a794-9239870e0fd3",
              "parentUUID": "7a1b0e16-0365-4f8b-a0ea-2ba9b7675dc8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 410,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "808a0866-3406-41d6-b230-146c0ea5a0d8",
              "parentUUID": "7a1b0e16-0365-4f8b-a0ea-2ba9b7675dc8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 292,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "7c074c29-bc19-474e-8c19-00173d775a3b",
              "parentUUID": "7a1b0e16-0365-4f8b-a0ea-2ba9b7675dc8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 193,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "fc9198cf-147c-46cc-bd2e-bebfa79bdc4b",
              "parentUUID": "7a1b0e16-0365-4f8b-a0ea-2ba9b7675dc8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 189,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "ad0c37c7-2dd3-4b15-8681-38d2e609c623",
              "parentUUID": "7a1b0e16-0365-4f8b-a0ea-2ba9b7675dc8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 205,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "b876fb2e-e0a9-4d8f-8f0d-c06c57ffcead",
              "parentUUID": "7a1b0e16-0365-4f8b-a0ea-2ba9b7675dc8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "02e96b5f-fc60-4119-ad5d-c1820b54b753",
            "d68ee7b1-df48-40d9-a794-9239870e0fd3",
            "808a0866-3406-41d6-b230-146c0ea5a0d8",
            "7c074c29-bc19-474e-8c19-00173d775a3b",
            "fc9198cf-147c-46cc-bd2e-bebfa79bdc4b",
            "ad0c37c7-2dd3-4b15-8681-38d2e609c623",
            "b876fb2e-e0a9-4d8f-8f0d-c06c57ffcead"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2112,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cf61aee1-4775-41f4-808a-29a519ce64f4",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 214,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "fbb4eb32-7ddd-4924-b616-44a8efce78d0",
              "parentUUID": "cf61aee1-4775-41f4-808a-29a519ce64f4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 363,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "ea235564-ca99-4f1e-a6d1-162eff2f75ec",
              "parentUUID": "cf61aee1-4775-41f4-808a-29a519ce64f4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fbb4eb32-7ddd-4924-b616-44a8efce78d0",
            "ea235564-ca99-4f1e-a6d1-162eff2f75ec"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 577,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6ee6a7a3-a1b2-447b-b70c-b6b9efc348ff",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 207,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "2664e3ea-d5c1-4375-9231-fccb4e6ca801",
              "parentUUID": "6ee6a7a3-a1b2-447b-b70c-b6b9efc348ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 228,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "71a33793-a284-46a7-a86a-0a7658a0b1c8",
              "parentUUID": "6ee6a7a3-a1b2-447b-b70c-b6b9efc348ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 384,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "39024c4f-9669-4f23-9165-6fd9d270c2fb",
              "parentUUID": "6ee6a7a3-a1b2-447b-b70c-b6b9efc348ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 317,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "6ab62361-9a26-4db6-9d5b-d0ff9a5fe500",
              "parentUUID": "6ee6a7a3-a1b2-447b-b70c-b6b9efc348ff",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2664e3ea-d5c1-4375-9231-fccb4e6ca801",
            "71a33793-a284-46a7-a86a-0a7658a0b1c8",
            "39024c4f-9669-4f23-9165-6fd9d270c2fb",
            "6ab62361-9a26-4db6-9d5b-d0ff9a5fe500"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1136,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8522f25c-d918-4f8c-adcd-652135521221",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 598,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "40083238-f411-4da8-8e6b-debeb1e0ed28",
              "parentUUID": "8522f25c-d918-4f8c-adcd-652135521221",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 614,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "db37d720-7b54-4acb-8f31-2e31c7e08e1c",
              "parentUUID": "8522f25c-d918-4f8c-adcd-652135521221",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "40083238-f411-4da8-8e6b-debeb1e0ed28",
            "db37d720-7b54-4acb-8f31-2e31c7e08e1c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1212,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b07684b2-d3ac-416a-a1b5-21a025047af0",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 163,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "e54c782f-c8c0-4650-b62e-fade41fb8153",
              "parentUUID": "b07684b2-d3ac-416a-a1b5-21a025047af0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 212,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "8a520d8d-e742-459c-9122-54004ac58176",
              "parentUUID": "b07684b2-d3ac-416a-a1b5-21a025047af0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e54c782f-c8c0-4650-b62e-fade41fb8153",
            "8a520d8d-e742-459c-9122-54004ac58176"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 375,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7640c16e-9c59-4e53-aca6-f7bd1d71604c",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 659,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "a12fb5af-9baa-4ddd-bc11-ab88f767b99f",
              "parentUUID": "7640c16e-9c59-4e53-aca6-f7bd1d71604c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9919,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "5e133ff8-d6a4-4d6a-ad85-ca59b8ac61de",
              "parentUUID": "7640c16e-9c59-4e53-aca6-f7bd1d71604c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a12fb5af-9baa-4ddd-bc11-ab88f767b99f",
            "5e133ff8-d6a4-4d6a-ad85-ca59b8ac61de"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10578,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cf0783f7-f508-4f6e-9ab3-2d8f099577dd",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2639,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "6b87f2b7-84f3-4887-b882-4c1a993cbe32",
              "parentUUID": "cf0783f7-f508-4f6e-9ab3-2d8f099577dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 9879,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "f80b6575-3818-409c-b01e-68a60182f92a",
              "parentUUID": "cf0783f7-f508-4f6e-9ab3-2d8f099577dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 2825,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "a3120fbd-4536-4108-a000-f42085ba1dcf",
              "parentUUID": "cf0783f7-f508-4f6e-9ab3-2d8f099577dd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6b87f2b7-84f3-4887-b882-4c1a993cbe32",
            "f80b6575-3818-409c-b01e-68a60182f92a",
            "a3120fbd-4536-4108-a000-f42085ba1dcf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15343,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c323de03-4b04-49d0-afa3-cc15bd833278",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 319,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "b055198a-b0e7-4672-941e-7184c44d63af",
              "parentUUID": "c323de03-4b04-49d0-afa3-cc15bd833278",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 189,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "a2f87709-f97e-42fe-a7c4-487be8290a2b",
              "parentUUID": "c323de03-4b04-49d0-afa3-cc15bd833278",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 144,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "f0157817-2411-45d0-913b-b2361a329a4c",
              "parentUUID": "c323de03-4b04-49d0-afa3-cc15bd833278",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2797,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "26d25fa0-a35b-4666-a5e2-fead7a498657",
              "parentUUID": "c323de03-4b04-49d0-afa3-cc15bd833278",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b055198a-b0e7-4672-941e-7184c44d63af",
            "a2f87709-f97e-42fe-a7c4-487be8290a2b",
            "f0157817-2411-45d0-913b-b2361a329a4c",
            "26d25fa0-a35b-4666-a5e2-fead7a498657"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3449,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c8d992c4-e6a7-4724-b9c0-a40ac97e5298",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4662,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:43617/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43617/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43617/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43617/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43617/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43617/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43617/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43617/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43617/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43617/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43617/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43617/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43617/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "88c716c2-5202-437b-8223-8952cc1faed3",
              "parentUUID": "c8d992c4-e6a7-4724-b9c0-a40ac97e5298",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4726,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:43617/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43617/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43617/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43617/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43617/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43617/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43617/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43617/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43617/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43617/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43617/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43617/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43617/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4f54a7fe-3860-4d4e-8cf4-951ca6c372c2",
              "parentUUID": "c8d992c4-e6a7-4724-b9c0-a40ac97e5298",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4590,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:43617/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43617/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43617/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43617/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43617/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43617/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43617/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43617/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43617/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43617/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43617/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43617/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43617/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4e022cc0-9cb0-4a59-9764-85b79cae8c80",
              "parentUUID": "c8d992c4-e6a7-4724-b9c0-a40ac97e5298",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4571,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:43617/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43617/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43617/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43617/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43617/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43617/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43617/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43617/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43617/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43617/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43617/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43617/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43617/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "33a2166e-dac1-4d95-8251-c9390ea32192",
              "parentUUID": "c8d992c4-e6a7-4724-b9c0-a40ac97e5298",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4575,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:43617/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43617/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43617/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43617/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43617/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43617/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43617/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43617/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43617/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43617/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43617/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43617/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43617/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e1f95488-5276-4c22-bf64-2aa5ba680821",
              "parentUUID": "c8d992c4-e6a7-4724-b9c0-a40ac97e5298",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4616,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:43617/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43617/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43617/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43617/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43617/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43617/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43617/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43617/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43617/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43617/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43617/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43617/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43617/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "68ec7c4c-8833-45d1-9806-bfdd06fb3a2a",
              "parentUUID": "c8d992c4-e6a7-4724-b9c0-a40ac97e5298",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4623,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:43617/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43617/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43617/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43617/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43617/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43617/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43617/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43617/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43617/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43617/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43617/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43617/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43617/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d5473a58-2867-4a49-8b41-19203bad9f88",
              "parentUUID": "c8d992c4-e6a7-4724-b9c0-a40ac97e5298",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4588,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:43617/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43617/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43617/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43617/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43617/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43617/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43617/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43617/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43617/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43617/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43617/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43617/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43617/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "cbcd6fe1-8252-4f9c-910b-85e492257ffb",
              "parentUUID": "c8d992c4-e6a7-4724-b9c0-a40ac97e5298",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4564,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:43617/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43617/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43617/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43617/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43617/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43617/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43617/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43617/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43617/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43617/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43617/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43617/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43617/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ba22a567-8614-4710-b730-4975193ed89e",
              "parentUUID": "c8d992c4-e6a7-4724-b9c0-a40ac97e5298",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "88c716c2-5202-437b-8223-8952cc1faed3",
            "4f54a7fe-3860-4d4e-8cf4-951ca6c372c2",
            "4e022cc0-9cb0-4a59-9764-85b79cae8c80",
            "33a2166e-dac1-4d95-8251-c9390ea32192",
            "e1f95488-5276-4c22-bf64-2aa5ba680821",
            "68ec7c4c-8833-45d1-9806-bfdd06fb3a2a",
            "d5473a58-2867-4a49-8b41-19203bad9f88",
            "cbcd6fe1-8252-4f9c-910b-85e492257ffb",
            "ba22a567-8614-4710-b730-4975193ed89e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 41515,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "da148496-c3f6-4214-b7ef-08d6ff7a5460",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4613,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:43617/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43617/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43617/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43617/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43617/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43617/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43617/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43617/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43617/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43617/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43617/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43617/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43617/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "89585f97-d276-4818-9b3f-528200805d05",
              "parentUUID": "da148496-c3f6-4214-b7ef-08d6ff7a5460",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4661,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:43617/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43617/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43617/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43617/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43617/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43617/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43617/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43617/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43617/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43617/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43617/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43617/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43617/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "3161c650-df79-4986-bc37-65fbce6f0719",
              "parentUUID": "da148496-c3f6-4214-b7ef-08d6ff7a5460",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4659,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:43617/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:43617/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:43617/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:43617/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:43617/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:43617/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:43617/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:43617/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:43617/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:43617/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:43617/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:43617/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:43617/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "9b30741e-959b-4c1e-ad40-91c5578188b0",
              "parentUUID": "da148496-c3f6-4214-b7ef-08d6ff7a5460",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "89585f97-d276-4818-9b3f-528200805d05",
            "3161c650-df79-4986-bc37-65fbce6f0719",
            "9b30741e-959b-4c1e-ad40-91c5578188b0"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13933,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "57e9c41b-ce8d-41b4-b0d4-00c7a281dcf7",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 963,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "f4a89a6c-7b09-442a-a2ac-5ef279b9d3cf",
              "parentUUID": "57e9c41b-ce8d-41b4-b0d4-00c7a281dcf7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 696,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "bc0823e4-d2e6-4cc4-8887-ecf706cb5650",
              "parentUUID": "57e9c41b-ce8d-41b4-b0d4-00c7a281dcf7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f4a89a6c-7b09-442a-a2ac-5ef279b9d3cf",
            "bc0823e4-d2e6-4cc4-8887-ecf706cb5650"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1659,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}